<!-- you need to launch it like this roslaunch qubo_launch buoy_test.launch video:=/home/sgillen/video/nbrf_video/comp/comp_buoy/20100714084551.avi  -->

<launch>
  
  <group>
    <!-- best way I could find so that we actually pass this argument, still don't love it though -->
    
    <remap from="/qubo/camera/image_raw" to="/qubo/camera/image"/>

        
    <!-- Launch Gazebo with the empty underwater world -->
    <include file="$(find qubo_launch)/gazebo/empty_underwater_world.launch" />
    
    <!-- Spawn basic Qubo robot into the world -->
    <include file="$(find qubo_launch)/gazebo/spawn_basic_qubo.launch">
      <arg name="namespace" value="gazebo_qubo"/>
    </include>
    
    
    <node name="vision_node" pkg="vision" type="vision_node" args="/qubo/camera/image"/> 
   
    
    
    <!-- launch video stream -->
    <include file="$(find video_stream_opencv)/launch/camera.launch" ns="/qubo" >
      <!-- node name and ros graph name -->
      <arg name="camera_name" value="camera" />
      <!-- means video device 0, /dev/video0 -->
      <arg name="video_stream_provider" value="/qubo/camera/image" />
      <!-- throttling the querying of frames to -->
      <arg name="fps" value="5" />
      <!-- setting frame_id -->
      <arg name="frame_id" value="simulated_camera" />
      <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
           "file:///$(find your_camera_package)/config/your_camera.yaml" -->
      <!-- <arg name="camera_info_url" value="" /> -->
      <!-- flip the image horizontally (mirror it) -->
      <arg name="flip_horizontal" value="false" />
      <!-- flip the image vertically -->
      <arg name="flip_vertical" value="false" />
      <!-- visualize on an image_view window the stream generated -->
      <arg name="visualize" value="true" />

      <respawn = "true" />
    </include>
   
  </group>
  
</launch>
