#ifndef DVL_SIM_HEADER
#define DVL_SIM_HEADER

#include "qubo_node.h" //always included
#include "underwater_sensor_msgs/DVL.h" //

class DVLSimNode : QuboNode {

 public:
DVLSimNode(int,char**,int); //constructor: always include these 3 fields first, then any fields specific to the sensor
~DVLSimNode(); //destructor; ignore
  
//update: gets data about any other node which are needed for the operation of this node
  void update();
//publish: puts information about this node in a message file (defined in qubo/packages/ram_msgs)
  void publish();
  void dvlCallBack(const underwater_sensor_msgs::DVL msg);
  
  protected: //fields specific to node

  underwater_sensor_msgs::DVL msg;
  ros::Subscriber subscriber;
 
  
};



#endif